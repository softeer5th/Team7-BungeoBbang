plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.bungeobbang'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // valid
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // websocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.3'
    // H2
    implementation 'com.h2database:h2'
    // Mysql
    implementation 'mysql:mysql-connector-java:8.0.32'
    // Mongodb
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    // Redis
    implementation group: 'io.lettuce', name: 'lettuce-core', version: '6.5.2.RELEASE'
    // 아호코라식 알고리즘
    implementation group: 'org.ahocorasick', name: 'ahocorasick', version: '0.6.3'
    // mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    // password encoder
    implementation group: 'org.mindrot', name: 'jbcrypt', version: '0.4'
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    // query dsl
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
    implementation group: 'com.querydsl', name: 'querydsl-core', version: '5.1.0'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    // https://mvnrepository.com/artifact/de.flapdoodle.embed/de.flapdoodle.embed.mongo
    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo.spring3x:4.18.0'


}

tasks.named('test') {
    useJUnitPlatform()
}
def querydslSrcDir = 'src/main/generated'
clean {
    delete file(querydslSrcDir)
}
tasks.withType(JavaCompile).configureEach {
    options.generatedSourceOutputDirectory = file(querydslSrcDir)
}